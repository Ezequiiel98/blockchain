@import '../../../../../../assets/scss/colors.scss';

.containerBlock {
  border-radius: 5px;
  transition: background-color .2s ease, transform .2s ease;
  flex-shrink: 0;
  z-index: 2;
  overflow: hidden;
  position: relative;

  &:hover .noCertified {
    opacity: 1;
  }
}


.noCertified {
  content: '';
  position: absolute;
  background-color: inherit;
  opacity: 0;
  z-index: 2;
  transform: rotateZ(49deg);
  -webkit-transform: rotateZ(49deg);
  -moz-transform: rotateZ(49deg);
  -ms-transform: rotateZ(49deg);
  -o-transform: rotateZ(49deg);
  transition: opacity .1s ease;
  -webkit-transition: opacity .1s ease;
  -moz-transition: opacity .1s ease;
  -ms-transition: opacity .1s ease;
  -o-transition: opacity .1s ease;
}

.containerSmallBlock {
  @extend .containerBlock;
  margin: 0 7.8px;
  height: 68px;
  width: 70px;
  
  &:hover {
    transform: translateY(6px);
  }

  & .noCertified{
    width: 12px;
    height: 95px;
    right: 29px;
    top: -15px;
  }
}

.containerBigBlock {
  @extend .containerBlock;
  border-radius: 0;
  border: 3px solid $white;
  height: 114px;
  width: 114px;
  transform: translate(-2px, -2px);

  & .noCertified{
    width: 12px;
    height: calc(100% + 60px);
    right: 46%;
    top: -28px;
    transform: rotateZ(45deg)  ;
    -webkit-transform: rotateZ(45deg)  ;
    -moz-transform: rotateZ(45deg)  ;
    -ms-transform: rotateZ(45deg)  ;
    -o-transform: rotateZ(45deg)  ;
  }
}

/* Block */
.block {
  display: flex;
  flex-direction: column;
  position: relative;
  overflow: hidden;

  &:hover {
    cursor: pointer;
  }

  &:active {
    cursor: move;
  }
}

.containerBigBlock .block {
  @extend .block;
  height: 112px;
  width: 114px;
}

.containerSmallBlock .block {
  @extend .block;
  width: 70px;
  height: 62px;
  border-radius: 5px;

  &:hover {
  cursor: pointer;
  border-radius: 0;
  height: 64px;
  }
}

/* Blocks  Background colors  */
$lightColors: ("red": $red, "yellow": $yellow, "blue": $blue, "lightblue": $lightblue, "green": $green);

$darkColors: ("redDark": $redDark, "yellowDark": $yellowDark, "blueDark": $blueDark, "lightblueDark": $lightblueDark, "greenDark": $greenDark);

@mixin bc-color-block($list) {
  @each $name, $bc-color in $list{
    .#{$name} {
      @extend .block;
      background-color: #{$bc-color};
    }
  }
}

@include bc-color-block($lightColors);
@include bc-color-block($darkColors);


/* block points */
.blockPoints {
  max-width: 52%;
  min-height: 30%;
  position: relative;
  left: 10%;
  pointer-events: none;
}

.point {
  content: '';
  background-color: $white;
  border-radius: 50%;
  position: absolute;
}

.containerBigBlock .point {
  @extend .point;
  width: 8px;
  height: 8px;
}

.containerSmallBlock .point {
  @extend .point;
  width: 5px;
  height: 5px;
}

.point:nth-child(odd) {
  top: 30%;
}

.point:nth-child(even) {
  top: 67%;
}

//* posiciona los spans con 12% de diferencia entre ellos */
$left: 10%;

@for $i from 1 through 7 {
  .point#{$i} {
  @extend .point;
  left: $left;
  }

  $left: $left+12%;
}

.blockNumber {
  align-self: flex-end;
  color: $white;
  padding: 0;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-weight: bold;
  z-index: 2;
  pointer-events: none;
}

.blockNumber>* {
  pointer-events: none;
}

.containerBigBlock .blockNumber {
  @extend .blockNumber;
  margin-top: 12px;
  margin-right: 12px;
  font-size: 40px;
}

.containerSmallBlock .blockNumber {
  @extend .blockNumber;
  margin-top: 0px;
  margin-right: 5px;
  font-size: 32px;
}
